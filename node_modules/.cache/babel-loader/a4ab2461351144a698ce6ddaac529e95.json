{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Startups Apps\\\\confagroapp\\\\src\\\\context\\\\cartContext.jsx\";\nimport React, { createContext } from \"react\";\nexport const cartContext = /*#__PURE__*/createContext();\n\nclass CartContext extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClearCart = () => {};\n\n    this.handleAddToCart = prod => {\n      const item = this.state.cart.filter(item => item.name === prod.name); // check if product already exists\n\n      if (item.length > 0) {\n        // if so, increase qty instead\n        const foundItem = item[0];\n        foundItem.quantity = foundItem.quantity + 1;\n        return foundItem;\n      } // console.log(cart);\n\n\n      const updatedCart = [...this.state.cart, { ...prod,\n        quantity: 1\n      }];\n      this.setState({\n        cart: updatedCart\n      });\n    };\n\n    this.handleRemoveFromCart = name => {\n      const item = this.state.cart.filter(item => item.name === name);\n    };\n\n    this.state = {\n      cart: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(cartContext.Provider, {\n      value: {\n        cart: this.state.cart,\n        addToCart: this.handleAddToCart,\n        removeFromCart: this.handleRemoveFromCart,\n        clearCart: this.handleClearCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default CartContext;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Startups Apps/confagroapp/src/context/cartContext.jsx"],"names":["React","createContext","cartContext","CartContext","Component","constructor","props","handleClearCart","handleAddToCart","prod","item","state","cart","filter","name","length","foundItem","quantity","updatedCart","setState","handleRemoveFromCart","render","addToCart","removeFromCart","clearCart","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;;AAEP,MAAME,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAOnBC,eAPmB,GAOD,MAAM,CAAE,CAPP;;AAAA,SASnBC,eATmB,GASAC,IAAD,IAAU;AAC3B,YAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAwBH,IAAD,IAAUA,IAAI,CAACI,IAAL,KAAcL,IAAI,CAACK,IAApD,CAAb,CAD2B,CAE3B;;AACA,UAAIJ,IAAI,CAACK,MAAL,GAAc,CAAlB,EAAqB;AACpB;AACA,cAAMC,SAAS,GAAGN,IAAI,CAAC,CAAD,CAAtB;AACAM,QAAAA,SAAS,CAACC,QAAV,GAAqBD,SAAS,CAACC,QAAV,GAAqB,CAA1C;AACA,eAAOD,SAAP;AACA,OAR0B,CAU3B;;;AACA,YAAME,WAAW,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,IAAf,EAAqB,EAAE,GAAGH,IAAL;AAAWQ,QAAAA,QAAQ,EAAE;AAArB,OAArB,CAApB;AACA,WAAKE,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEM;AAAR,OAAd;AACA,KAtBkB;;AAAA,SAwBnBE,oBAxBmB,GAwBKN,IAAD,IAAU;AAChC,YAAMJ,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAwBH,IAAD,IAAUA,IAAI,CAACI,IAAL,KAAcA,IAA/C,CAAb;AACA,KA1BkB;;AAElB,SAAKH,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE;AADM,KAAb;AAGA;;AAuBDS,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,WAAD,CAAa,QAAb;AACC,MAAA,KAAK,EAAE;AACNT,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADX;AAENU,QAAAA,SAAS,EAAE,KAAKd,eAFV;AAGNe,QAAAA,cAAc,EAAE,KAAKH,oBAHf;AAINI,QAAAA,SAAS,EAAE,KAAKjB;AAJV,OADR;AAAA,gBAOE,KAAKD,KAAL,CAAWmB;AAPb;AAAA;AAAA;AAAA;AAAA,YADD;AAWA;;AAzCwC;;AA4C1C,eAAetB,WAAf","sourcesContent":["import React, { createContext } from \"react\";\r\n\r\nexport const cartContext = createContext();\r\n\r\nclass CartContext extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcart: [],\r\n\t\t};\r\n\t}\r\n\r\n\thandleClearCart = () => {};\r\n\r\n\thandleAddToCart = (prod) => {\r\n\t\tconst item = this.state.cart.filter((item) => item.name === prod.name);\r\n\t\t// check if product already exists\r\n\t\tif (item.length > 0) {\r\n\t\t\t// if so, increase qty instead\r\n\t\t\tconst foundItem = item[0];\r\n\t\t\tfoundItem.quantity = foundItem.quantity + 1;\r\n\t\t\treturn foundItem;\r\n\t\t}\r\n\r\n\t\t// console.log(cart);\r\n\t\tconst updatedCart = [...this.state.cart, { ...prod, quantity: 1 }];\r\n\t\tthis.setState({ cart: updatedCart });\r\n\t};\r\n\r\n\thandleRemoveFromCart = (name) => {\r\n\t\tconst item = this.state.cart.filter((item) => item.name === name);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<cartContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tcart: this.state.cart,\r\n\t\t\t\t\taddToCart: this.handleAddToCart,\r\n\t\t\t\t\tremoveFromCart: this.handleRemoveFromCart,\r\n\t\t\t\t\tclearCart: this.handleClearCart,\r\n\t\t\t\t}}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</cartContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CartContext;\r\n"]},"metadata":{},"sourceType":"module"}