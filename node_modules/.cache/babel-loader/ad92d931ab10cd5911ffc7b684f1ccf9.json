{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Startups Apps\\\\confagroapp\\\\src\\\\context\\\\cartContext.jsx\";\nimport React, { createContext } from \"react\";\nexport const cartContext = /*#__PURE__*/createContext();\n\nclass CartContext extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClearCart = () => {\n      // alert(\"clear cart function hit\");\n      this.setState({\n        success: !this.state.success,\n        cart: []\n      });\n    };\n\n    this.handleAddToCart = prod => {\n      const item = this.state.cart.filter(item => item.name === prod.name);\n      this.state.success && this.setState({\n        success: false\n      }); // check if product already exists\n\n      if (item.length > 0) {\n        // if so, increase qty instead\n        // const foundItem = item[0];\n        item[0].quantity = item[0].quantity + 1;\n        return item[0];\n      } // console.log(cart);\n\n\n      const updatedCart = [...this.state.cart, { ...prod,\n        quantity: 1\n      }];\n      this.setState({\n        cart: updatedCart\n      });\n    };\n\n    this.handleRemoveFromCart = name => {\n      const newCart = this.state.cart.filter(item => item.name !== name);\n      this.setState({\n        cart: newCart\n      });\n    };\n\n    this.state = {\n      cart: [],\n      success: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(cartContext.Provider, {\n      value: {\n        cart: this.state.cart,\n        addToCart: this.handleAddToCart,\n        removeFromCart: this.handleRemoveFromCart,\n        clearCart: this.handleClearCart,\n        success: this.state.success\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default CartContext;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Startups Apps/confagroapp/src/context/cartContext.jsx"],"names":["React","createContext","cartContext","CartContext","Component","constructor","props","handleClearCart","setState","success","state","cart","handleAddToCart","prod","item","filter","name","length","quantity","updatedCart","handleRemoveFromCart","newCart","render","addToCart","removeFromCart","clearCart","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;;AAEP,MAAME,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAQnBC,eARmB,GAQD,MAAM;AACvB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD,OAAvB;AAAgCE,QAAAA,IAAI,EAAE;AAAtC,OAAd;AACA,KAXkB;;AAAA,SAanBC,eAbmB,GAaAC,IAAD,IAAU;AAC3B,YAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,MAAhB,CAAwBD,IAAD,IAAUA,IAAI,CAACE,IAAL,KAAcH,IAAI,CAACG,IAApD,CAAb;AACA,WAAKN,KAAL,CAAWD,OAAX,IAAsB,KAAKD,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd,CAAtB,CAF2B,CAI3B;;AACA,UAAIK,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACpB;AACA;AACAH,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAAR,GAAmBJ,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAAR,GAAmB,CAAtC;AACA,eAAOJ,IAAI,CAAC,CAAD,CAAX;AACA,OAV0B,CAY3B;;;AACA,YAAMK,WAAW,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,IAAf,EAAqB,EAAE,GAAGE,IAAL;AAAWK,QAAAA,QAAQ,EAAE;AAArB,OAArB,CAApB;AACA,WAAKV,QAAL,CAAc;AAAEG,QAAAA,IAAI,EAAEQ;AAAR,OAAd;AACA,KA5BkB;;AAAA,SA8BnBC,oBA9BmB,GA8BKJ,IAAD,IAAU;AAChC,YAAMK,OAAO,GAAG,KAAKX,KAAL,CAAWC,IAAX,CAAgBI,MAAhB,CAAwBD,IAAD,IAAUA,IAAI,CAACE,IAAL,KAAcA,IAA/C,CAAhB;AACA,WAAKR,QAAL,CAAc;AAAEG,QAAAA,IAAI,EAAEU;AAAR,OAAd;AACA,KAjCkB;;AAElB,SAAKX,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZF,MAAAA,OAAO,EAAE;AAFG,KAAb;AAIA;;AA6BDa,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,WAAD,CAAa,QAAb;AACC,MAAA,KAAK,EAAE;AACNX,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADX;AAENY,QAAAA,SAAS,EAAE,KAAKX,eAFV;AAGNY,QAAAA,cAAc,EAAE,KAAKJ,oBAHf;AAINK,QAAAA,SAAS,EAAE,KAAKlB,eAJV;AAKNE,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD;AALd,OADR;AAAA,gBAQE,KAAKH,KAAL,CAAWoB;AARb;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AAjDwC;;AAoD1C,eAAevB,WAAf","sourcesContent":["import React, { createContext } from \"react\";\r\n\r\nexport const cartContext = createContext();\r\n\r\nclass CartContext extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcart: [],\r\n\t\t\tsuccess: false,\r\n\t\t};\r\n\t}\r\n\r\n\thandleClearCart = () => {\r\n\t\t// alert(\"clear cart function hit\");\r\n\t\tthis.setState({ success: !this.state.success, cart: [] });\r\n\t};\r\n\r\n\thandleAddToCart = (prod) => {\r\n\t\tconst item = this.state.cart.filter((item) => item.name === prod.name);\r\n\t\tthis.state.success && this.setState({ success: false });\r\n\r\n\t\t// check if product already exists\r\n\t\tif (item.length > 0) {\r\n\t\t\t// if so, increase qty instead\r\n\t\t\t// const foundItem = item[0];\r\n\t\t\titem[0].quantity = item[0].quantity + 1;\r\n\t\t\treturn item[0];\r\n\t\t}\r\n\r\n\t\t// console.log(cart);\r\n\t\tconst updatedCart = [...this.state.cart, { ...prod, quantity: 1 }];\r\n\t\tthis.setState({ cart: updatedCart });\r\n\t};\r\n\r\n\thandleRemoveFromCart = (name) => {\r\n\t\tconst newCart = this.state.cart.filter((item) => item.name !== name);\r\n\t\tthis.setState({ cart: newCart });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<cartContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tcart: this.state.cart,\r\n\t\t\t\t\taddToCart: this.handleAddToCart,\r\n\t\t\t\t\tremoveFromCart: this.handleRemoveFromCart,\r\n\t\t\t\t\tclearCart: this.handleClearCart,\r\n\t\t\t\t\tsuccess: this.state.success,\r\n\t\t\t\t}}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</cartContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CartContext;\r\n"]},"metadata":{},"sourceType":"module"}